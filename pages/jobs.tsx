import { useEffect, useState, useCallback } from 'react';
import Head from 'next/head';
import axios from 'axios';
import PageContainer from '../src/components/PageContainer';
import dayjs from 'dayjs';
import isSameOrAfter from 'dayjs/plugin/isSameOrAfter';

dayjs.extend(isSameOrAfter);

import { Jobs } from '../src/types/jobs';
import Cards from '../src/components/Cards';
import Header from '../src/components/Header';
import Filters from '../src/components/Filters';
import { orderBySmallestToLargest } from '../src/utils/orderBy';

export interface PageJobsProps {
  jobs: Jobs;
}

const PageJobs: React.FC<PageJobsProps> = ({ jobs }) => {
  const [filteredJobs, setFilteredJobs] = useState([]);
  const [showOnly7DaysJobs, setShowOnly7DaysJobs] = useState(false);
  const [orderByCompanyName, setOrderByCompanyName] = useState(false);

  const getOnly7DaysBeforeJobs = useCallback(
    (jobsToFilter: Jobs, filterActive: boolean) => {
      if (filterActive) {
        const days7Before = dayjs().add(-7, 'day').startOf('day');
        const last7DaysJobs = jobsToFilter.filter(({ postingDate }) => {
          return dayjs(postingDate).isSameOrAfter(days7Before);
        });

        return last7DaysJobs;
      }

      return jobsToFilter;
    },
    [],
  );

  useEffect(() => {
    const last7DaysJobs = getOnly7DaysBeforeJobs(jobs, showOnly7DaysJobs);
    const jobsByCompanyName = orderByCompanyName
      ? orderBySmallestToLargest(last7DaysJobs, 'companyName')
      : last7DaysJobs;

    setFilteredJobs(jobsByCompanyName);
  }, [jobs, showOnly7DaysJobs, orderByCompanyName, getOnly7DaysBeforeJobs]);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <Header />
      <PageContainer>
        <Filters
          showOnly7DaysJobs={showOnly7DaysJobs}
          orderByCompanyName={orderByCompanyName}
          setShowOnly7DaysJobs={setShowOnly7DaysJobs}
          setOrderByCompanyName={setOrderByCompanyName}
        />
        <Cards jobs={filteredJobs} />
      </PageContainer>
    </>
  );
};

export default PageJobs;

export async function getServerSideProps() {
  const {
    data: { jobs, totalJobs },
  } = await axios.post('https://www.zippia.com/api/jobs/', {
    companySkills: true,
    dismissedListingHashes: [],
    fetchJobDesc: true,
    jobTitle: 'Business Analyst',
    locations: [],
    numJobs: 20,
    previousListingHashes: [],
  });

  return {
    props: {
      jobs,
      totalJobs,
    },
  };
}
